<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<import resource="classpath:appCtx2.xml"/>
	
	<bean id="dao" class="spring.dao.MemberDao"/>
	<!-- Same class as id="dao", differentiate with qualifier & @Qualifier -->
	<bean id="daoAnother" class="spring.dao.MemberDao">
		<qualifier value="another"></qualifier>
	</bean>
	
	<bean id="regService" class="spring.service.MemberRegService">
<!-- 		<constructor-arg>
			<bean class="spring.dao.MemberDao"></bean> SAME AS <constructor-arg ref="memberDao"/>
		</constructor-arg> -->
		
		<!-- 생성자에게 인수 전달하는 대신, <property> 태그 사용
			-> EL과 비슷, name="dao"면 해당 객체(MemberRegService)에서 setDao()를 찾는다.
			-> 성공적으로 찾는다면 memberDao 객체(위의 bean id="memberDao")를 setDao()의 매개변수에 전달하여 실행한다.
			-> MemberRegService 객체는 변수 값이 채워지는 것이다!
		-->
		<property name="dao">
			<ref bean="daoAnother"/>
		</property>
	</bean>

</beans>