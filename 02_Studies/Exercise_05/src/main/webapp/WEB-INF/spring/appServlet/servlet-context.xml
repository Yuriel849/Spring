<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="UTF-8" />
	</beans:bean>
	
	<!-- multipartResolver, to handle the data received when a file is uploaded to the server -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="20971520"></beans:property>
		<!-- maxUploadSize is restricted to approximately 10MB -->
		<beans:property name="defaultEncoding" value="UTF-8"></beans:property>
	</beans:bean>
	
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:\Users\Yuriel\Downloads\Upload"></beans:constructor-arg>
	</beans:bean>
	
	<!-- Generate interceptor type beans -->
	<beans:bean id="sampleInterceptor" class="org.zerock.interceptor.SampleInterceptor"></beans:bean>
	<beans:bean id="loginInterceptor" class="org.zerock.interceptor.LoginInterceptor"></beans:bean>
	<beans:bean id="authInterceptor" class="org.zerock.interceptor.AuthInterceptor"></beans:bean>
 	<!-- Set up interceptors -->
	<interceptors>
		<interceptor>
			<!-- The "SampleInterceptor" bean is called whenever the "/doA" & "/doB" paths(경로) are used -->
			<mapping path="/doA"/>
			<mapping path="/doB"/>
			<beans:ref bean="sampleInterceptor"/>
		</interceptor>
		<interceptor>
			<!-- The "LoginInterceptor" bean is called whenever the "/user/loginPost path(경로) is used -->
			<mapping path="/user/loginPost"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		<interceptor>
			<!-- The "AuthInterceptor" bean is called whenever the "/sboard/register path(경로) is used -->
			<mapping path="/sboard/register"/>
			<mapping path="/sboard/modifyPage"/>
			<mapping path="/sboard/removePage"/>
			<beans:ref bean="authInterceptor"/>
		</interceptor>
	</interceptors>
		
	<context:component-scan base-package="org.zerock.controller" />
	
</beans:beans>